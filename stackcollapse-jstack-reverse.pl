#!/usr/bin/perl -w
#
# stackcolllapse-jstack.pl	collapse perf samples into single lines.
#
# Parses a list of multiline stacks generated by jstack, and
# outputs a semicolon separated stack followed by a space and a count.
#
# USAGE: ./stackcollapse-jstack.pl infile > outfile
#
# Example input:
#
#  "http-apr-8889-exec-9" daemon prio=10 tid=0x00007f7b74012000 nid=0x8d01 waiting on condition [0x00007f7b4dcc4000]
#     java.lang.Thread.State: WAITING (parking)
#          at sun.misc.Unsafe.park(Native Method)
#          - parking to wait for  <0x00000006859e8a50> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
#          at org.apache.tomcat.util.threads.TaskQueue.take(TaskQueue.java:104)
#          at org.apache.tomcat.util.threads.TaskQueue.take(TaskQueue.java:32)
#          at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
#          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
#          at java.lang.Thread.run(Thread.java:662)
#  [...]
#
# Example output:
#
#  Unsafe.park;TaskQueue.take;TaskQueue.take;ThreadPoolExecutor.getTask;ThreadPoolExecutor$Worker.run;Thread.run 1
#
# Input may be created and processed using:
#
#  jstack ...
#
# Copyright 2012 Joyent, Inc.  All rights reserved.
# Copyright 2012 Brendan Gregg.  All rights reserved.
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at docs/cddl1.txt or
# http://opensource.org/licenses/CDDL-1.0.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at docs/cddl1.txt.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# 02-Mar-2012	Brendan Gregg	Created this.
# 21-May-2014   Jeremy Schneider  Create jstack version from copy of Brendan's perf script

use strict;

my %collapsed;

sub remember_stack {
	my ($stack, $count) = @_;
	$collapsed{$stack} += $count;
}

my @stack;

foreach (<>) {
	next if m/^#/;
	chomp;

	if (m/^$/) {
		remember_stack(join(";", reverse(@stack)), 1) if @stack;
		undef @stack;
		next;
	}

	# Note the details skipped below, and customize as desired

	if (m/^Full thread dump/) { next; }
	if (m/^JNI global references/) { next; }
	if (m/^\d\d\d\d-\d\d-\d\d/) { next; }
	if (m/^\".*tid=/) { next; }
	if (m/^\s+java.lang.Thread.State/) { next; }
        if (m/\s+- waiting on/) { next; }
        if (m/\s+- waiting to lock/) { next; }
        if (m/\s+- parking to wait/) { next; }
        if (m/\s+- locked/) { next; }

	if (/^\s+at (.*\.)?([\w\$\<\>]+\.[\w\$\<\>]+)\(.+\)/) {
		my ($lead, $func) = ($1, $2);
		unshift @stack, $func;
	} else {
		warn "Unrecognized line: $_";
	}
}

foreach my $k (sort { $a cmp $b } keys %collapsed) {
	printf "$k $collapsed{$k}\n";
}
